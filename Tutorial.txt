# Zeropkg — Tutorial Completo (v2.0)

## 1. Introdução
Zeropkg é um gerenciador de pacotes source-based escrito em Python 3, projetado para construir, instalar e manter sistemas Linux From Scratch (LFS) ou distribuições baseadas em código-fonte.
Ele faz o download, aplica patches, compila, instala e registra pacotes diretamente do código-fonte, com total rastreabilidade e controle.

------------------------------------------------------------
## 2. Estrutura de Diretórios
/usr/lib/zeropkg/modules  -> Módulos principais (builder, installer, deps, etc.)
/usr/bin/zeropkg          -> Executável principal
/usr/ports                -> Repositório de receitas
/usr/ports/distfiles      -> Cache de downloads
/var/zeropkg/build        -> Diretório temporário de build
/var/lib/zeropkg          -> Banco de dados SQLite
/var/zeropkg/packages     -> Cache de binários
/var/log/zeropkg          -> Logs detalhados
/etc/zeropkg/config.toml  -> Configuração global
/mnt/lfs                  -> Diretório LFS (opcional)

------------------------------------------------------------
## 3. Instalação
Dependências do sistema:
sudo apt install python3 python3-pip git wget tar patch fakeroot sqlite3

Bibliotecas Python:
sudo pip3 install requests beautifulsoup4 tomli

Instalação automática:
sudo bash install_zeropkg.sh

Esse script:
- Cria diretórios e instala módulos
- Instala /usr/bin/zeropkg
- Gera /etc/zeropkg/config.toml
- Clona automaticamente o repositório de ports em /usr/ports

------------------------------------------------------------
## 4. Arquivo de Configuração (/etc/zeropkg/config.toml)
[paths]
db_path = "/var/lib/zeropkg/installed.sqlite3"
ports_dir = "/usr/ports"
build_root = "/var/zeropkg/build"
cache_dir = "/usr/ports/distfiles"
packages_dir = "/var/zeropkg/packages"

[options]
jobs = 4
fakeroot = true
chroot_enabled = true
auto_clean = true
log_level = "INFO"

[repos]
main = "https://github.com/fcanata00/Zeropkg-Ports.git"
testing = "https://github.com/fcanata00/Zeropkg-Testing.git"
local = "/mnt/repos/zeropkg-local"

[network]
proxy = ""
verify_ssl = true
retries = 3
timeout = 30

[lfs]
root = "/mnt/lfs"
chroot_shell = "/bin/bash"
user = "lfs"
group = "lfs"

------------------------------------------------------------
## 5. Comandos Principais (CLI)
zeropkg --help                     -> Exibe ajuda
zeropkg --sync                     -> Atualiza repositórios
zeropkg --update                   -> Verifica novas versões
zeropkg --upgrade                  -> Atualiza pacotes instalados
zeropkg -b, --build <pacote>       -> Compila um pacote
zeropkg -i, --install <pacote>     -> Instala um pacote e dependências
zeropkg -r, --remove <pacote>      -> Remove um pacote com hooks
zeropkg --depclean                 -> Remove dependências órfãs
zeropkg --revdep                   -> Repara dependências quebradas
zeropkg --info <pacote>            -> Mostra informações
zeropkg --search <nome>            -> Pesquisa pacotes
zeropkg --lfs-bootstrap --root /mnt/lfs -> Constrói toolchain LFS
zeropkg --lfs-bootstrap --root /mnt/lfs -b binutils-2.43.1-pass1
zeropkg -b binutils --variant pass1 --root /mnt/lfs
zeropkg --root /mnt/lfs --chroot -b binutils-2.43.1
zeropkg lfs-bootstrap binutils-pass1 gcc-pass1 linux-headers glibc binutils gcc

Todos os comandos aceitam --dry-run e abreviações (-b, -i, -r).

------------------------------------------------------------
## 6. Estrutura de Receitas (TOML)
[source]
urls = [
    "https://ftp.gnu.org/gnu/binutils/binutils-2.43.1.tar.xz",
    "https://mirror.kernel.org/gnu/binutils/binutils-2.43.1.tar.xz"
]
sha256 = "abc123..."
format = "tar.xz"

[build]
dependencies = ["gcc", "glibc"]
commands = [
    "./configure --prefix=/usr",
    "make -j4",
    "make check",
    "make install"
]
env = { "CFLAGS" = "-O2 -pipe" }

[hooks]
pre_configure = "scripts/pre.sh"
post_install  = "scripts/post.sh"

[package]
description = "GNU Binutils — ferramentas de montagem e linkagem"
category = "devel"
license = "GPL-3.0"
maintainer = "Você <email@dominio>"

------------------------------------------------------------
## 7. Exemplo: Construção LFS Toolchain
1. Crie o diretório:
   sudo mkdir -pv /mnt/lfs
2. Monte as partições e defina LFS:
   export LFS=/mnt/lfs
3. Sincronize o repositório:
   zeropkg --sync
4. Construa a toolchain:
   zeropkg --lfs-bootstrap --root /mnt/lfs

O Zeropkg montará o chroot, configurará o ambiente seguro e construirá as fases:
   binutils-pass1 → gcc-pass1 → glibc → binutils-final → gcc-final ...

------------------------------------------------------------
## 8. Logs e Banco de Dados
Logs detalhados: /var/log/zeropkg/
Banco de dados SQLite: /var/lib/zeropkg/installed.sqlite3

Use:
sqlite3 /var/lib/zeropkg/installed.sqlite3
.tables

------------------------------------------------------------
## 9. Desinstalação
Para remover completamente o Zeropkg (opcional):
sudo rm -rf /usr/lib/zeropkg /usr/bin/zeropkg /etc/zeropkg /var/lib/zeropkg /var/zeropkg

------------------------------------------------------------
## 10. Conclusão
O Zeropkg é uma ferramenta poderosa e modular que oferece controle total sobre o sistema e a construção de pacotes a partir do código-fonte.
Totalmente integrado com LFS e repositórios Git, é ideal para aprendizado, automação e desenvolvimento de distribuições personalizadas.
