[package]
name = "gcc"
version = "13.2.0"
description = "GNU Compiler Collection - Compilador completo do sistema (C, C++)"
category = "development"
license = "GPLv3"
homepage = "https://gcc.gnu.org/"
maintainer = "Zeropkg LFS Automation"
stage = "final"
priority = "critical"

[source]
urls = [
  "https://ftp.gnu.org/gnu/gcc/gcc-13.2.0/gcc-13.2.0.tar.xz",
  "https://ftp.gnu.org/gnu/mpfr/mpfr-4.2.0.tar.xz",
  "https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz",
  "https://ftp.gnu.org/gnu/mpc/mpc-1.3.1.tar.gz"
]
sha256 = [
  "e1761b92bd6ecb1d02d0cc39df1c47cb57b8cf6df569da91b6a4f1ad5f8f3b91",
  "13dfdec0c7b8e6e9d1a95f9a7a79d607b098dcc8e0bb4cfdc1c7f8b3b50b1f3e",
  "fd4829912cddd12f53fa4a5e4a8b0c2b8e6b0bfb47a1f23a68d2cb49e504bb2b",
  "a685a66e3d8c5b76e05b6b6fdcfaedec6c531da1b1c8f04f7af0b7d32fb4a42f"
]
extract_to = "gcc-13.2.0"

[build]
depends = ["binutils", "glibc", "zlib"]
optional_depends = ["libstdc++", "gmp", "mpfr", "mpc"]
use_chroot = true
fakeroot = true
workdir = "build"

prepare = [
  "tar -xf ../mpfr-4.2.0.tar.xz && mv -v mpfr-4.2.0 mpfr",
  "tar -xf ../gmp-6.2.1.tar.xz && mv -v gmp-6.2.1 gmp",
  "tar -xf ../mpc-1.3.1.tar.gz && mv -v mpc-1.3.1 mpc",
  "case $(uname -m) in",
  "  x86_64) sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64 ;;",
  "esac",
  "mkdir -v build"
]

configure = [
  "cd build",
  "../configure",
  "--prefix=/usr",
  "--enable-languages=c,c++",
  "--disable-multilib",
  "--disable-bootstrap",
  "--with-system-zlib",
  "--enable-default-pie",
  "--enable-default-ssp",
  "--enable-lto",
  "--with-pic",
  "--with-tune=generic",
  "--enable-shared",
  "--enable-threads=posix"
]

compile = [
  "cd build",
  "make -j$(nproc)"
]

check = [
  "ulimit -s 32768",
  "cd build",
  "make -k check || true",
  "../contrib/test_summary | grep -A7 Summ"
]

install = [
  "cd build",
  "make install",
  "ln -svr /usr/bin/cpp /lib",
  "ln -svr /usr/bin/gcc /usr/bin/cc"
]

post_install_cleanup = [
  "rm -rf /usr/libexec/gcc/*/13.2.0/install-tools",
  "find /usr/lib/gcc -type f -name '*.la' -delete"
]

[environment]
CC = "gcc"
CXX = "g++"
CFLAGS = "-O2 -pipe -fPIC"
CXXFLAGS = "-O2 -pipe -fPIC"
LDFLAGS = "-Wl,-O1,--as-needed"
LANG = "en_US.UTF-8"
LC_ALL = "POSIX"
MAKEFLAGS = "-j$(nproc)"
PATH = "/usr/bin:/bin"

[patches]
apply = [
  "https://www.linuxfromscratch.org/patches/lfs/12.2/gcc-13.2.0-upstream_fixes-1.patch"
]
strip = 1

[hooks]
pre_configure = [
  "echo '[HOOK] Preparando build do GCC final...'"
]
post_install = [
  "echo '[HOOK] GCC 13.2.0 instalado com sucesso em /usr/bin/gcc'",
  "ln -sfv ../usr/bin/cpp /lib",
  "ln -sfv gcc /usr/bin/cc"
]
post_remove = [
  "echo '[HOOK] GCC removido. Reinstale binutils e glibc antes de recompilar.'"
]

[package.files]
bin = ["/usr/bin/gcc", "/usr/bin/cpp", "/usr/bin/cc"]
lib = ["/usr/lib/gcc/*/13.2.0/*"]
conf = ["/etc/gcc"]
doc = ["/usr/share/doc/gcc-13.2.0"]

[tests]
enabled = true
commands = [
  "echo 'int main(){}' > dummy.c",
  "cc dummy.c -v -Wl,--verbose &> dummy.log",
  "grep 'gcc version' dummy.log",
  "rm -v dummy.c a.out dummy.log"
]

[package.meta]
provides = ["gcc", "g++", "cpp"]
conflicts = ["gcc-pass1", "gcc-pass2"]
replaces = ["gcc-old"]
group = "toolchain"
keywords = ["compiler", "toolchain", "c", "c++", "gnu"]

[notifications]
notify = true
urgency = "critical"
summary = "Novo GCC instalado: vers√£o 13.2.0"
icon = "/usr/share/icons/gcc.png"

[package.post]
run = [
  "gcc --version",
  "echo '[Zeropkg] GCC compilado e instalado com sucesso.'"
]

[package.cleanup]
remove = [
  "/usr/share/info",
  "/usr/share/man/man7/gcc.7",
  "/usr/libexec/gcc/*/13.2.0/install-tools"
]

[install]
root = "/"
keep_build = false
safe_chroot = true
parallel_install = true
overwrite_existing = true
