# ========================================================================
# Zeropkg Example Recipe (full-feature-example.toml)
# Exemplo completo com todos os campos e recursos suportados
# ========================================================================

[package]
name = "example-app"
version = "1.0.0"
release = 1
category = "utilities"
description = "Um exemplo completo de receita Zeropkg com todos os campos"
license = "GPL-3.0-or-later"
homepage = "https://example.org/example-app"
maintainer = "Zeropkg Developers <dev@zeropkg.org>"
stage = "stable"
priority = "normal"

# Tags opcionais (usadas em update/notify)
tags = ["example", "demo", "showcase"]

# ------------------------------------------------------------------------
[source]
# Múltiplos URLs e formatos suportados (tar.xz, tar.gz, zip, git)
urls = [
  "https://example.org/releases/example-app-1.0.0.tar.xz",
  "https://mirror.example.com/example-app-1.0.0.tar.gz",
  "git+https://github.com/example/example-app.git"
]

# Suporte a múltiplas assinaturas/checsums
sha256 = [
  "c3b9a2e42cf028cf72a153e47bb5cc4d6a27e20df80f444a03e15ac933d23915",
  "5b243e17d231f8b09a54e58758a9c2dba7087ac84db06c77a9e58a0b10a3cf77"
]

extract_to = "example-app-1.0.0"

# ------------------------------------------------------------------------
[build]
# Dependências compiladas antes desta
depends = ["gcc", "make", "glibc", "zlib"]

# Dependências opcionais (apenas avisos se ausentes)
optional_depends = ["curl", "openssl"]

# Diretório de trabalho e flags
workdir = "build"
use_chroot = true
fakeroot = true
parallel_build = true

# Sequência de etapas
prepare = [
  "patch -Np1 -i ../example-app-fix-paths.patch",
  "autoreconf -fi",
  "mkdir -pv build"
]

configure = [
  "cd build",
  "../configure",
  "--prefix=/usr",
  "--sysconfdir=/etc",
  "--localstatedir=/var",
  "--enable-shared",
  "--disable-static"
]

compile = [
  "cd build",
  "make -j$(nproc)"
]

check = [
  "cd build",
  "make check"
]

install = [
  "cd build",
  "make DESTDIR=$ZEROPKG_DESTDIR install"
]

post_install_cleanup = [
  "find $ZEROPKG_DESTDIR/usr/share/doc -type f -delete"
]

# ------------------------------------------------------------------------
[environment]
# Variáveis de ambiente adicionais
CC = "gcc"
CXX = "g++"
CFLAGS = "-O2 -pipe -fPIC"
CXXFLAGS = "-O2 -pipe -fPIC"
LDFLAGS = "-Wl,-O1,--as-needed"
MAKEFLAGS = "-j$(nproc)"
LANG = "en_US.UTF-8"
PKG_CONFIG_PATH = "/usr/lib/pkgconfig:/usr/share/pkgconfig"
CONFIG_SITE = "/usr/share/config.site"
PATH = "/tools/bin:/usr/bin:/bin"

# ------------------------------------------------------------------------
[patches]
# Aplicação automática de patches locais ou remotos
apply = [
  "https://example.org/patches/example-fix-paths.patch",
  "patches/0001-fix-env-vars.patch"
]
strip = 1

# ------------------------------------------------------------------------
[hooks]
# Hooks automáticos executados antes/depois de cada fase
pre_fetch = ["echo '[HOOK] Pré-download iniciado'"]
post_fetch = ["echo '[HOOK] Download concluído'"]

pre_configure = ["echo '[HOOK] Preparando configuração'"]
post_configure = ["echo '[HOOK] Configuração concluída'"]

pre_build = ["echo '[HOOK] Iniciando compilação'"]
post_build = ["echo '[HOOK] Compilação concluída com sucesso'"]

pre_install = ["echo '[HOOK] Iniciando instalação'"]
post_install = [
  "echo '[HOOK] Instalação finalizada'",
  "ldconfig || true"
]

pre_remove = ["echo '[HOOK] Removendo pacote example-app'"]
post_remove = ["echo '[HOOK] Remoção concluída'"]

# ------------------------------------------------------------------------
[package.files]
bin = ["/usr/bin/*"]
sbin = ["/usr/sbin/*"]
lib = ["/usr/lib/*.so*"]
doc = ["/usr/share/doc/bash-5.3/*"]
man = ["/usr/share/man/man1/*", "/usr/share/man/man8/*"]
conf = ["/etc/bash.bashrc"]

# ------------------------------------------------------------------------
[tests]
# Suporte a testes automáticos pós-build
enabled = true
commands = [
  "example-app --version",
  "example-app --help",
  "test -x /usr/bin/example-app"
]

# ------------------------------------------------------------------------
[package.meta]
# Metadados extras para análise e atualização
provides = ["example-lib"]
conflicts = ["example-old"]
replaces = ["example-legacy"]
group = "base"
keywords = ["demo", "reference", "complete"]

# ------------------------------------------------------------------------
[revdep]
# Dependências reversas declaradas manualmente (usado em revdep scan)
reverse = ["example-utils", "example-gui"]

# ------------------------------------------------------------------------
[notifications]
# Integração com o sistema de notificações e barra de status
notify = true
urgency = "normal"   # valores possíveis: normal, critical, urgent
summary = "Novo pacote instalado: example-app"
icon = "/usr/share/icons/example.png"

# ------------------------------------------------------------------------
[package.post]
# Comandos pós-instalação específicos
run = [
  "update-desktop-database -q",
  "gtk-update-icon-cache -q /usr/share/icons/hicolor || true",
  "echo 'example-app instalado com sucesso'"
]

# ------------------------------------------------------------------------
[package.scripts]
# Scripts extras (executados via chroot)
pre_script = "/etc/zeropkg/hooks.d/pre-example.sh"
post_script = "/etc/zeropkg/hooks.d/post-example.sh"

# ------------------------------------------------------------------------
[package.cleanup]
# Itens a remover após build para reduzir tamanho
remove = [
  "/usr/share/info",
  "/usr/share/locale/*",
  "/usr/share/man/*"
]

# ------------------------------------------------------------------------
[package.verify]
# Verificação de integridade
signatures = ["example-app-1.0.0.tar.xz.sig"]
gpg_key = "0xAABBCCDDEEFF1122"

# ------------------------------------------------------------------------
[debug]
# Opções para builds de depuração
enable_debug = false
strip_binaries = true
keep_temp = false

# ------------------------------------------------------------------------
[install]
# Parâmetros de instalação específicos
root = "/"
keep_build = false
safe_chroot = true
parallel_install = true
overwrite_existing = false
