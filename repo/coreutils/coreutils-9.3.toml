[package]
name = "coreutils"
version = "9.3"
category = "lfs"
description = "GNU Coreutils — utilitários essenciais para LFS (Capítulo 6.5)"
homepage = "https://www.gnu.org/software/coreutils/"
license = "GPL-3.0-or-later"
maintainer = "zeropkg"

[sources]
urls = [
  "https://ftp.gnu.org/gnu/coreutils/coreutils-9.3.tar.xz"
]
checksum = "sha256:adbcfcfe8992358f99eb6f75986a8e7b3c270a3f6125a7a1f0b4e33de788de00"
extract_to = "coreutils-9.3"

[environment]
LFS = "/mnt/lfs"
LFS_TGT = "x86_64-lfs-linux-gnu"
PATH = "/mnt/lfs/tools/bin:/usr/bin:/bin"
DESTDIR = "@DESTDIR@"

[build]
chroot = true
fakeroot = false
cleanup_sources = true
commands = [
  # 1️⃣ Configuração para cross-build no ambiente LFS
  "./configure --prefix=/usr \\",
  "  --host=$LFS_TGT \\",
  "  --build=$(build-aux/config.guess) \\",
  "  --enable-install-program=hostname",

  # 2️⃣ Compilação
  "make",

  # 3️⃣ Instalação no destino
  "make DESTDIR=${DESTDIR} install",

  # 4️⃣ Reorganização conforme LFS — mover binários críticos
  "mv -v ${DESTDIR}/usr/bin/{cat,chgrp,chmod,chown,cp,date,dd,df,echo,false,ln,ls,mkdir,mknod,mv,pwd,rm,rmdir,stty,sync,true,uname} ${DESTDIR}/bin",
  "mv -v ${DESTDIR}/usr/bin/{head,tail,basename,dirname} ${DESTDIR}/usr/bin",
  "mv -v ${DESTDIR}/usr/bin/{install,tee,link,unlink} ${DESTDIR}/usr/bin"
]

[hooks]
pre_build = "echo '==> Iniciando build do Coreutils 9.3 (LFS temporário)'"
post_install = "echo '==> Coreutils 9.3 instalado e reorganizado conforme LFS'"

[dependencies]
build = ["bash-5.2.37", "ncurses-6.5", "m4-1.4.19"]
runtime = []

[lfs]
stage = "toolchain"
bootstrap = true
chroot_required = true
